
@using Entidades
@inject HttpClient HttpClient
@inject Principal Principal
@inject NavigationManager NavigationManager

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<div class="video-container">
<video autoplay muted loop id="background-video">
    <source src="https://www.connectic.cl/wp-content/uploads/2024/07/136268-764387688_small.mp4" type="video/mp4">            
</video>
<div class="overlay"></div>
    <div class="content">
    <MostrarAlerta @ref="Alert" />
        <ul class="producto-cards inicio-agrandar">
            @if (productos is not null)
            {
                @foreach (var producto in productos)
                {
                    <li style="background-image: url('@producto.ImageUrl');">
                        <div class="producto-info">
                            <!--NOMBRE PRODUCTO -->
                            <span class="title">@producto.NombreProducto</span>
                            @producto.Descripcion
                            <!--VALORES-->
                            @if (producto.ConDescuento)
                            {
                                <span class="price-old"><s>$@CalcularValorOld(producto.Valor)</s></span>
                            }
                            <span class="price">@Principal.FormatearPesos(producto.Valor)</span>

                            <!--VALORACIÓN-->
                            <div class="rating" title="Valoración del producto">
                                <input type="radio" name="rating" id="rating-1">
                                <label for="rating-1"></label>
                                <input type="radio" name="rating" id="rating-2">
                                <label for="rating-2"></label>
                                <input type="radio" name="rating" id="rating-3">
                                <label for="rating-3"></label>
                                <input type="radio" name="rating" id="rating-4">
                                <label for="rating-4"></label>
                                <input type="radio" name="rating" id="rating-5" class="star-desactivada">
                                <label for="rating-5" class="star-desactivada"></label>
                            </div>
                        </div>
                        <!--STOCK-->
                        <div class="producto-stock">
                            <div class="stocks">
                                @if (@producto.Stock >= 10)
                                {
                                    <span class="stock-verde">
                                        @producto.Stock.ToString()
                                    </span>
                                }
                                else if (@producto.Stock > 0 && @producto.Stock < 10)
                                {
                                    <span class="stock-naranjo"> 
                                        @producto.Stock.ToString()
                                    </span>
                                }
                                else
                                {
                                    <span class="stock-rojo">@producto.Stock.ToString()</span>
                                }
                            </div>
                        </div>
                        @* BOTON AGREGAR *@
                        <button style="margin-top:226px; cursor:pointer" class="custom-boton btn-12">
                            <span @onclick="() => AgregarCarrito(producto)">Comprar <i class="fa-solid fa-cart-arrow-down"></i></span><span>
                                Agregar al carro
                                <i class="fas fa-shopping-cart" />
                            </span>
                        </button>
                    </li>                   
                }
            }
        </ul> 
        
    </div>
    <!--FIN CONTENT-->
    
</div>




<style>
    .inicio-agrandar {
        transform: scale(0);
        animation: inicio-agrandar 1.0s ease-in-out forwards; /* Animación de 3 segundos */
    }

    @@keyframes inicio-agrandar {
        0% {
            transform: scale(0); /* Tamaño inicial (invisible) */
        }

        100% {
            transform: scale(1); /* Tamaño final (normal) */
        }
}
    .custom-boton {        
        color: #fff;
        border-radius: 5px;
        margin-left: -10px;
        font-family: 'Lato', sans-serif;
        font-weight: 500;
        background: transparent;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        display: inline-block;
        box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1);
        outline: none;
    }
    .btn-12 {
        width: 100%;
        height: 45px;
        line-height: 42px;
        position: relative;
        bottom: 20px;
        border: none;
        box-shadow: none;
        -webkit-perspective: 230px;
        perspective: 230px;
    }

        .btn-12 span {
            width: 100%;
            background: linear-gradient(0deg, rgba(0,172,238,1) 0%, rgba(2,126,251,1) 100%);
            display: block;
            position: absolute;
            height: 40px;
            box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1);
            border-radius: 5px;
            margin: 0;
            text-align: center;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            -webkit-transition: all .3s;
            transition: all .3s;
        }

            .btn-12 span:nth-child(1) {
                z-index: 1;
                width: 100%;
                box-shadow: -7px -7px 20px 0px #fff9, -4px -4px 5px 0px #fff9, 7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;
                -webkit-transform: rotateX(90deg);
                -moz-transform: rotateX(90deg);
                transform: rotateX(90deg);
                -webkit-transform-origin: 50% 50% -20px;
                -moz-transform-origin: 50% 50% -20px;
                transform-origin: 50% 50% -20px;
            }

            .btn-12 span:nth-child(2) {
                width: 100%;
                -webkit-transform: rotateX(0deg);
                -moz-transform: rotateX(0deg);
                transform: rotateX(0deg);
                -webkit-transform-origin: 50% 50% -20px;
                -moz-transform-origin: 50% 50% -20px;
                transform-origin: 50% 50% -20px;
            }

        .btn-12:hover span:nth-child(1) {
            box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1);
            -webkit-transform: rotateX(0deg);
            -moz-transform: rotateX(0deg);
            transform: rotateX(0deg);
        }

        .btn-12:hover span:nth-child(2) {
            box-shadow: inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1);
            color: transparent;
            -webkit-transform: rotateX(-90deg);
            -moz-transform: rotateX(-90deg);
            transform: rotateX(-90deg);
        }
</style>
@code
{
    List<Productos> productos = new List<Productos>();
    Order carrito = new Order();
    private MostrarAlerta Alert;

    protected override async Task OnInitializedAsync()
    {       
        //TEST - PRINCIPAL STOCK
        var producto1 = Principal.GetProducto(1, 20000, 1, 2, true);
        productos.Add(producto1);
        var producto2 = Principal.GetProducto(2, 15000, 2, 10);
        productos.Add(producto2);
        var producto3 = Principal.GetProducto(3, 35000, 3, 3);
        productos.Add(producto3);
        var producto4 = Principal.GetProducto(4, 23990, 4, 4, true);
        productos.Add(producto4);        
        var producto5 = Principal.GetProducto(5, 17990, 5, 12, true);
        productos.Add(producto5);
        var producto6 = Principal.GetProducto(6, 7000, 6, 1, false);
        productos.Add(producto6);
        Principal.Productos = productos;
        Principal.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        Principal.OnChange -= StateHasChanged;
    }
    public void AgregarCarrito(Productos producto)
    {
        if (producto.Stock > 0)
        {
            carrito = Principal.Carrito;

            if (carrito.Productos.Any(p => p.IdProducto == producto.IdProducto))
            {
                var productoExistente = carrito.Productos.FirstOrDefault(p => p.IdProducto == producto.IdProducto);

                if (productoExistente != null)
                {
                    productoExistente.Cantidad++;
                    productoExistente.ValorCantidad = productoExistente.ValorCantidad + producto.Valor; //REPETIDO
                }
            }
            else
            {
                producto.ValorCantidad = producto.Valor; //DEFAULT
                carrito.Productos.Add(producto);
            }
            carrito.CantidadProductos++;
            Principal.AgregarCarrito(carrito);
            producto.Stock--;
            var valorTotal = Principal.FormatearPesos(producto.Valor);
            Alert.CustomAlert($"Se agrego {producto.NombreProducto} al carrito! 🛒", valorTotal, "success", carrito, producto.ImageUrl);
        }
        else
        {
            Alert.ShowAlert("Sin Stock", "El producto seleccionado no tiene más stock, esperar que el administrador ingrese más.", "warning");
        }
    }

    public string CalcularValorOld(decimal valorProducto)
    {
        var valorOld = valorProducto + 10000;
        return $"{valorOld.ToString("N0", new System.Globalization.CultureInfo("es-CL"))}";
    }
}
