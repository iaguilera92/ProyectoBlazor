@using SitioWeb.Pages
@using Entidades
@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject Principal Principal
@inject Blazored.Modal.Services.IModalService ModalService
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IServiceProvider ServiceProvider
@using Transbank.Common;
@using Transbank.Webpay.Common;
@using Transbank.Webpay.WebpayPlus

<style class="darkreader darkreader--sync" media="screen"></style>
<div class="page">
    <main>

        <!--BARRA PRINCIPAL-->
        <div id="headerwrap" class=" tf_box">
            <div class="header-icons tf_hide">
                <a id="menu-icon" class="tf_inline_b tf_text_dec" href="#mobile-menu" aria-label="Menu">
                    <span class="menu-icon-inner tf_inline_b tf_vmiddle tf_overflow"></span>
                    <span class="screen-reader-text">Menu</span>
                </a>
            </div>

            <header id="header" class="tf_box pagewidth tf_clearfix" itemscope="itemscope" itemtype="https://schema.org/WPHeader">
                <!--LOGO PRINCIPAL -->
                <div class="header-bar tf_box header-bar slide-in-div" style="width:30%;">
                    <a title="Click para recargar el sitio web" class="logo" href="">
                        @* <img src="https://image.pngaaa.com/939/1920939-middle.png" data-tf-not-load="1" fetchpriority="high"> *@
                        @* <img src="shop-online.png" data-tf-not-load="1" fetchpriority="high" style="width:4rem" /> *@
                        <img src="logo-nxo.png" data-tf-not-load="1" fetchpriority="high" />
                    </a>
                </div>

                <div id="mobile-menu" class="sidemenu sidemenu-off tf_scrollbar" style="width:80%;">

                    <div class="navbar-wrapper tf_clearfix">
                        <nav id="main-nav-wrap" itemscope="itemscope" itemtype="https://schema.org/SiteNavigationElement">
                            <ul id="main-nav" class="main-nav tf_clearfix tf_box" data-init="true">
                                <li class="menu-item-page-2214 menu-item menu-item-type-post_type menu-item-object-page menu-item-home current-menu-item page_item page-item-2214 current_page_item menu-item-4015"><a href="" aria-current="page">Inicio</a> </li>
                                <li @onclick="OtrosProductos" class="menu-item-page-2891 menu-item menu-item-type-post_type menu-item-object-page menu-item-4009" ><a>Otros Productos</a></li>
                                <li @onclick="SubmitTransaction" class="menu-item-page-417 menu-item menu-item-type-post_type menu-item-object-page menu-item-4011"><a>Transbank</a></li>
                                <li class="menu-item-page-31 menu-item menu-item-type-post_type menu-item-object-page menu-item-4014"><a>Iniciar Sesión</a></li>
                                <!--ADMINISTRACIÓN-->
                                <li id="AdministracionApp">
                                    <div class="user-info">
                                        @* CARRITO *@
                                        <div class="shopping agrandar" title="Click para visualizar el carrito" @onclick="AgregarCarrito">
                                            <div id="cart" class="cart" data-totalitems="0">
                                                <i class="fas fa-shopping-cart"></i>
                                            </div>
                                            @if (carrito != null && carrito.CantidadProductos != 0)
                                            {
                                                <span class="stock-rojo" style="padding: 3px 12px !important;">
                                                    @carrito.CantidadProductos
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </li>
                                <li @onclick="AgregarCarrito" id="AdministracionMobile" class="menu-item-page-31 menu-item menu-item-type-post_type menu-item-object-page menu-item-4014" style="display:none;">
                                    <a>Carrito de compras</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                    <a id="menu-icon-close" aria-label="Close menu" class="tf_close tf_hide" href="#"><span class="screen-reader-text">Close Menu</span></a>
                    <!--MOBILE MENU-->                    
                </div>
            </header>
        </div>
        <!--FIN BARRA PRINCIPAL-->

        <script>
            document.getElementById('menu-icon').addEventListener('click', function () {
                var menu = document.getElementById('mobile-menu');
                menu.className = 'sidemenu tf_scrollbar sidemenu-on';
                menu.style.display = 'block';
                var admin = document.getElementById('AdministracionApp');
                admin.style.display = 'none';
                var adminMobile = document.getElementById('AdministracionMobile');
                admin.style.display = 'block';
            });
            document.getElementById('menu-icon-close').addEventListener('click', function () {
                var menu = document.getElementById('mobile-menu');
                menu.className = 'sidemenu sidemenu-off tf_scrollbar';
                menu.style.display = 'none';
                var admin = document.getElementById('AdministracionApp');
                admin.style.display = 'block';
                var adminMobile = document.getElementById('AdministracionMobile');
                admin.style.display = 'none';
            });
        </script>
        
        <!--BARRA PRINCIPAL OLD -->
        @* <div class="top-row px-4">
            <a class="logo" href="" style="cursor: pointer;">
                <img src="https://cdn-icons-png.freepik.com/512/9284/9284424.png" alt="Redirigir a Proyecto Blazor"/>
            </a>
            <div></div>
            <a class="nav-tab active">
                <img src="https://cdn-icons-png.flaticon.com/512/25/25694.png" width="45" height="45" alt="img" />
            <div>Inicio</div>
            </a>
            <a class="nav-tab" style="margin-left: -0.4rem;" @onclick="OtrosProductos">
                <img src="https://cdn.icon-icons.com/icons2/2596/PNG/512/ad_product_icon_155850.png" width="45" height="45" alt="img" />
                <div>Otros Productos</div>
            </a>
            <a class="nav-tab" style="margin-left: -0.4rem;" @onclick="OtrosProductos">
                <img src="https://www.iconpacks.net/icons/1/free-users-icon-267-thumb.png" width="45" height="45" alt="img" />
                <div>Nosotros</div>
            </a>
            <!--ADMINISTRACIÓN-->
            <Administracion />
        </div>*@

        <Index />
        <MostrarAlerta @ref="Alert" />
    </main>
</div>
@code {
    [Parameter] public EventCallback OnEvento { get; set; }
    //[Parameter] public EventCallback<string> OnEventoCarrito { get; set; }
    private Order carrito;
    private MostrarAlerta Alert;

    protected override async Task OnInitializedAsync()
    {
        carrito = Principal.GetCarrito();
        Principal.OnChange += OnProductosChanged; //INICIAR LA ACCIÓN
    }
    private void OnProductosChanged()
    {
        //ACCIÓN: Cargar el carrito actualizado y gatillar
        carrito = Principal.GetCarrito();
        StateHasChanged();
    }
    //NECESARIO PARA TERMINAR LA ACCIÓN
    public void Dispose()
    {
        Principal.OnChange -= OnProductosChanged; // Desuscríbete del evento
    }

    //AGREGAR AL CARRITO
    public async Task AgregarCarrito()
    {
        try
        {
            if (Principal.Carrito?.Productos?.Count > 0)
            {
                ModalService.Show<Carrito>();
            }
            else
            {
                Alert.ShowAlert("Sin productos seleccionados", $"Primero deberá añadir al carrito un producto para continuar con la compra.", "warning");
            }
        }
        catch (Exception ex)
        {
            Alert.DefaultAlert("EN CONSTRUCCIÓN", $"{ex.Message}", "warning");
        }
    }

    public void AgregarProducto()
    {
        var productos = Principal.GetProductos();
        if (productos?.Count > 0)
        {
            var ultimoId = productos.LastOrDefault().IdProducto + 1;

            Random random = new Random();
            int numeroRandom = random.Next(10000, 50001);
            int stockRandom = random.Next(3, 15);
            int imgRandom = random.Next(1, 4);
            var producto = Principal.GetProducto(ultimoId, numeroRandom, imgRandom, stockRandom);

            //JS.InvokeVoidAsync("mostrarLimpiar", elementLimpiar);
            Principal.AgregarProducto(producto);

        }
    }
    public async Task Limpiar()
    {
        var productos = Principal.GetProductos();
        if (productos?.Count > 4 || Principal.Carrito?.Productos.Count > 0)
        {
            var confirmado = await Alert.ConfirmAlert("¿Estas seguro de vaciar el carrito?", "", "warning");
            if (confirmado)
            {
                if (productos?.Count > 4)
                {
                    Principal.Limpiar();

                    await OnEvento.InvokeAsync(null);
                    Alert.ShowAlert("Productos Eliminados!", "Se han eliminado todos los productos menos los productos principales.", "success");

                }
                else if (Principal.Carrito?.Productos.Count > 0)
                {
                    Principal.LimpiarCarrito();
                    Alert.ShowAlert("Carrito vaciado!", "Carrito se encuentra sin productos actualmente.", "success");

                }
                else
                {
                    Alert.ShowAlert("Informativo", "No se ha podido eliminar los productos, los productos principales no se eliminan.", "warning");
                }
            }
        }
        else
        {
            Alert.ShowAlert("Informativo", "No se ha podido eliminar los productos, los productos principales no se eliminan.", "warning");
        }
    }
    private async Task OtrosProductos(MouseEventArgs e)
    {
        await JS.InvokeVoidAsync("activarMapaOverlay");
    }

    private async Task SubmitTransaction()
    {
        try
        {
            var result = TransbankService.CreateTransaction();
            // var random = new Random();

            // var buyOrder = random.Next(999999999).ToString();
            // var sessionId = random.Next(999999999).ToString();
            // var amount = random.Next(1000, 999999);
            // var returnUrl = "https://localhost:5002/ReservaTransbank";


            // // Definir el JSON con los datos a enviar
            // var options = new Options(
            //             "597055555532", // Rut del comercio
            //             "579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C", // Llave secreta del comercio
            //             WebpayIntegrationType.Test  // Tipo de integración (Test en este caso)
            //         ); 

            // var result = TransbankService.CreateTransaction(buyOrder, sessionId, amount, returnUrl);



            // var transactionData = new
            // {
            //     buy_order = buyOrder,
            //     session_id = sessionId,
            //     amount = amount,
            //     return_url = returnUrl
            // };

            // // Llamar al script de JavaScript pasando el JSON
            // await JS.InvokeVoidAsync("submitWebpayForm", transactionData);
        }
        catch (Exception ex)
        {
            
            throw;
        }       
    }
    
    private async Task Transbank(MouseEventArgs e)
    {
        try
        {
                       //API
            // var response = await HttpClient.PostAsync("https://localhost:7000/Transbank/PagoSimple", null);

            // // Verificar si la respuesta es exitosa
            // if (response.IsSuccessStatusCode)
            // {
            //     // Leer la respuesta (string) y asignarla a la variable
            //     apiResponse = await response.Content.ReadAsStringAsync();
            // }
            // else
            // {
            //     apiResponse = "Error al llamar a la API";
            // }
        }
        catch (Exception ex)
        {
            
        }
    }
}
<script>
    window.submitWebpayForm = function (transactionData) {
        // Crear un formulario dinámico
        var form = document.createElement('form');
        form.method = 'POST';
        form.action = 'https://webpay3gint.transbank.cl/rswebpaytransaction/api/webpay/v1.0/transactions';
        // form.action = 'https://webpay3gint.transbank.cl/rswebpaytransaction/api/webpay/v1.0/transactions';

        // Crear un campo oculto para cada propiedad del JSON
        for (var key in transactionData) {
            if (transactionData.hasOwnProperty(key)) {
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = transactionData[key];

                // Agregar el campo al formulario
                form.appendChild(input);
            }
        }

        // Enviar el formulario
        document.body.appendChild(form);
        form.submit();
    };

</script>